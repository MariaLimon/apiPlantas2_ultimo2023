// <auto-generated />
using System;
using ApiPlantas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace apiPlantas2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231206155713_prueba3")]
    partial class prueba3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiPlantas.Data.Models.Planta_Reporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HumedadD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.Property<int>("ReporteId")
                        .HasColumnType("int");

                    b.Property<string>("TamañoD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperaturaD")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlantaId");

                    b.HasIndex("ReporteId");

                    b.ToTable("Planta_Reportes");
                });

            modelBuilder.Entity("ApiPlantas.Data.Models.Plantas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Humedad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("NombrePlanta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tamaño")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("usuarioId");

                    b.ToTable("Plantas");
                });

            modelBuilder.Entity("ApiPlantas.Data.Models.Reportes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HumedadActual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TamañoActual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperaturaActual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ValvulaAbierta")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("ApiPlantas.Data.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumTelefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ApiPlantas.Data.Models.Planta_Reporte", b =>
                {
                    b.HasOne("ApiPlantas.Data.Models.Plantas", "Planta")
                        .WithMany("Planta_Reporte")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiPlantas.Data.Models.Reportes", "Reporte")
                        .WithMany("Planta_Reporte")
                        .HasForeignKey("ReporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planta");

                    b.Navigation("Reporte");
                });

            modelBuilder.Entity("ApiPlantas.Data.Models.Plantas", b =>
                {
                    b.HasOne("ApiPlantas.Data.Models.Usuario", "usuario")
                        .WithMany("Plantas")
                        .HasForeignKey("usuarioId");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ApiPlantas.Data.Models.Plantas", b =>
                {
                    b.Navigation("Planta_Reporte");
                });

            modelBuilder.Entity("ApiPlantas.Data.Models.Reportes", b =>
                {
                    b.Navigation("Planta_Reporte");
                });

            modelBuilder.Entity("ApiPlantas.Data.Models.Usuario", b =>
                {
                    b.Navigation("Plantas");
                });
#pragma warning restore 612, 618
        }
    }
}
